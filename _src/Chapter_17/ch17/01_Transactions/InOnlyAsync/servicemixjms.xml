<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:sm="http://servicemix.apache.org/config/1.0" 
	   xmlns:jms="http://servicemix.apache.org/jms/1.0"
	   xmlns:amq="http://activemq.org/config/1.0"
       xmlns:amqra="http://activemq.org/ra/1.0"
       xmlns:jencks="http://jencks.org/2.0"
	   xmlns:test="http://binildas.com/esb/servicemix/tx/jms/inonlyasync">

  <sm:container id="jbi" 
                embedded="true" 
                depends-on="jndi,broker"
                autoEnlistInTransaction="true"
                transactionManager="#transactionManager">
    <sm:flows>
      <sm:sedaFlow />
      <sm:jcaFlow connectionManager="#connectionManager"
                  jmsURL="tcp://localhost:61616?jms.asyncDispatch=true&amp;jms.useAsyncSend=true" />
    </sm:flows>

    <sm:activationSpecs>

      <sm:activationSpec>
        <sm:component>
          <jms:component>
            <jms:endpoints>

              <jms:endpoint service="test:MyConsumerService"
                            endpoint="consumerEP"
                            targetService="test:MyReceiverService"
                            role="consumer" 
                            defaultMep="http://www.w3.org/2004/08/wsdl/in-only"
                            processorName="jca"
                            connectionFactory="#connectionFactory"
                            resourceAdapter="#resourceAdapter"
                            bootstrapContext="#bootstrapContext"
                            synchronous="false">
                <jms:activationSpec>
                  <amqra:activationSpec destination="queue/A" destinationType="javax.jms.Queue" />
                </jms:activationSpec>
              </jms:endpoint>

              <jms:endpoint service="test:MyProviderService"
                            endpoint="providerEP"
                            role="provider" 
                            processorName="jca"
                            connectionFactory="#connectionFactory"
                            destinationStyle="queue"
                            jmsProviderDestinationName="queue/A" />
            </jms:endpoints>
          </jms:component>
        </sm:component>
      </sm:activationSpec>
      
      <sm:activationSpec id="receiver" service="test:MyReceiverService" endpoint="receiverEP">
        <sm:component>
          <bean class="org.apache.servicemix.tck.ReceiverComponent" />
        </sm:component>
      </sm:activationSpec>

    </sm:activationSpecs>
  </sm:container>

  <bean id="client" class="org.apache.servicemix.client.DefaultServiceMixClient">
    <constructor-arg ref="jbi"/>
  </bean>
  
  <bean id="jndi" 
        class="org.apache.xbean.spring.jndi.SpringInitialContextFactory" 
        factory-method="makeInitialContext"
        singleton="true">
    <property name="entries">
      <map>
        <entry key="jms/ConnectionFactory" value-ref="connectionFactory" />
      </map>
    </property>
  </bean>
  
  <!-- A managed JMS ConnectionFactory for ActiveMQ -->
  <amqra:managedConnectionFactory id="activemqMCF" resourceAdapter="#resourceAdapter" />
  <amqra:resourceAdapter  id="resourceAdapter" serverUrl="tcp://localhost:61616?jms.asyncDispatch=true&amp;jms.useAsyncSend=true"/>
  <jencks:connectionFactory  id="connectionFactory"
                             managedConnectionFactory="#activemqMCF"
                             connectionManager="#connectionManager" />
  
  <amq:broker id="broker" persistent="false">

    <amq:transportConnectors>
       <amq:transportConnector uri="tcp://localhost:61616" />
    </amq:transportConnectors>

  </amq:broker>

  <!-- Transaction manager -->
  <jencks:transactionManager id="transactionManager" />
  
  <!-- Work manager -->
  <jencks:workManager id="workManager" transactionManager="#transactionManager" />
  
  <!-- Bootstrap context for JCA -->
  <jencks:bootstrapContext id="bootstrapContext" workManager="#workManager" transactionManager="#transactionManager" />
  
  <!-- Connection manager for JCA -->
  <jencks:connectionTracker id="connectionTracker" geronimoTransactionManager="#transactionManager" />
  <jencks:poolingSupport id="poolingSupport" allConnectionsEqual="false" />
  <jencks:connectionManager id="connectionManager"
                            containerManagedSecurity="false"
                            transaction="xa"
                            transactionManager="#transactionManager"
                            poolingSupport="#poolingSupport"
                            connectionTracker="#connectionTracker" />

</beans>
